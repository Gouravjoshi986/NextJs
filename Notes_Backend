Next js is a full stack frameWork. It can handle both frontend and backend. 
Benefits: 
Single codebase for all your codebase
No cors issues, single domain name for your FE and BE
Ease of deployment, deploy a single codebase

Data Fetching in react is very time consuming and too many requests are used to fetch data. 
To make it better next js uses a differant wat of data fetching.
* fetch the user details on the server side and pre-render the page before returning it to the user.
In next you can make a component async and do async operations in it. 

* By doing this the flow of your programs becomes as if the browser sent a request to nextjs server and next js did a simultaneous request to backend got the data and rendered it on next js server and gave the file to browser.   THIS IS SERVER SIDE RENDERING. 

* Loader in next js = when the async call is happening and the server is busy nothing will load at that time. At that time we have to show a loader and the way to show a loader is adding a loading.tsx file in the app root directory. 

# For creating Backend. The route must be created in a folder called api inside the app folder of root directory.    app->api->routeName[eg. user/admin/map etc]->route.ts  
It would be a ts file and not a tsx file. 

Better fetches.  You will see that in root dir we are sending a backend request to the server itself http://localhost:3000/api/user .
getUserDetails runs on the server. This means youâ€™re sending a request from a server back to the server. This doesnt makes any sense as both frontend and backend are on same server.
# So we will define the route to send the db request direcctly beside the async component. 

# IMPORTANT = When you are fetching and frontend and backend code is in same page then you must not use client component for safety purpose else your backend will run with your front end page.  eg. Use server components only. 
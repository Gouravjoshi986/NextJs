# Minor inconviniences caused by react are: 
* It is not SEO Optimized. Cant be detected by crawlers as you dont inject your data in a html file directly rather you keep it in js files and when run on browser the html is injected. 
This makes it hard for crawlers to categorize your files and index/List them. 
* Waterfalling probelm -> one request triggers the call of other request which in turn trigger the call of other requests. which makes it slow as all the time of requests add up. 

The "waterfalling problem" in React, and more broadly in web development, refers to a scenario where data fetching operations are chained or dependent on each other in a way that leads to inefficient loading behavior.

* Seperate files for both frontend and backend. 
* Doesnt provide routing out of the box. 

# Next JS offerings
Server side rendering - Get’s rid of SEO problems
API routes - Single codebase with frontend and backend
File based routing (no need for react-router-dom)
Bundle size optimisations, Static site generation
Maintained by the Vercel team

* Downsides : 
Can’t be distributed via a CDN, always needs a server running that does server side rendering and hence is expensive
Very opinionated, very hard to move out of it